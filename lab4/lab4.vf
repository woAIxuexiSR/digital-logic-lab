////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : lab4.vf
// /___/   /\     Timestamp : 06/20/2018 23:39:34
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3e -verilog D:/lab/lab4/lab4.vf -w D:/lab/lab4/lab4.sch
//Design Name: lab4
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module cal_MUSER_lab4(btn0, 
                      btn1, 
                      btn2, 
                      mclk, 
                      reset, 
                      sw, 
                      an, 
                      dp, 
                      seg);

    input btn0;
    input btn1;
    input btn2;
    input mclk;
    input reset;
    input [7:0] sw;
   output [3:0] an;
   output dp;
   output [6:0] seg;
   
   wire [3:0] XLXN_27;
   wire [6:0] XLXN_30;
   wire [13:0] XLXN_33;
   wire XLXN_48;
   wire [3:0] XLXN_50;
   wire [3:0] XLXN_51;
   wire [3:0] XLXN_52;
   wire [3:0] XLXN_53;
   wire [3:0] an_DUMMY;
   
   assign an[3:0] = an_DUMMY[3:0];
   an_gen  XLXI_1 (.btn0(XLXN_48), 
                  .mclk(mclk), 
                  .an(an_DUMMY[3:0]));
   calculator  XLXI_2 (.bin(XLXN_30[6:0]), 
                      .btn0(btn0), 
                      .btn1(btn1), 
                      .btn2(btn2), 
                      .mclk(mclk), 
                      .reset(reset), 
                      .outbin(XLXN_33[13:0]));
   MUX  XLXI_3 (.an(an_DUMMY[3:0]), 
               .seg0(XLXN_50[3:0]), 
               .seg1(XLXN_51[3:0]), 
               .seg2(XLXN_52[3:0]), 
               .seg3(XLXN_53[3:0]), 
               .dp(dp), 
               .seg(XLXN_27[3:0]));
   LED  XLXI_4 (.bcd(XLXN_27[3:0]), 
               .led(seg[6:0]));
   bcd2bin  XLXI_13 (.bcd(sw[7:0]), 
                    .bin(XLXN_30[6:0]));
   bin2bcd  XLXI_14 (.bin(XLXN_33[13:0]), 
                    .hundred(XLXN_52[3:0]), 
                    .one(XLXN_50[3:0]), 
                    .ten(XLXN_51[3:0]), 
                    .thousand(XLXN_53[3:0]));
   GND  XLXI_15 (.G(XLXN_48));
endmodule
`timescale 1ns / 1ps

module counter163_MUSER_lab4(CLK, 
                             CLR, 
                             EN, 
                             D0, 
                             D1, 
                             D2, 
                             D3);

    input CLK;
    input CLR;
    input EN;
   output D0;
   output D1;
   output D2;
   output D3;
   
   wire CLK1;
   wire XLXN_6;
   wire XLXN_9;
   wire XLXN_15;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_20;
   wire XLXN_22;
   wire D0_DUMMY;
   wire D1_DUMMY;
   wire D2_DUMMY;
   wire D3_DUMMY;
   
   assign D0 = D0_DUMMY;
   assign D1 = D1_DUMMY;
   assign D2 = D2_DUMMY;
   assign D3 = D3_DUMMY;
   FDC #( .INIT(1'b0) ) XLXI_1 (.C(CLK1), 
               .CLR(CLR), 
               .D(XLXN_6), 
               .Q(D0_DUMMY));
   FDC #( .INIT(1'b0) ) XLXI_2 (.C(CLK1), 
               .CLR(CLR), 
               .D(XLXN_17), 
               .Q(D1_DUMMY));
   FDC #( .INIT(1'b0) ) XLXI_3 (.C(CLK1), 
               .CLR(CLR), 
               .D(XLXN_18), 
               .Q(D2_DUMMY));
   FDC #( .INIT(1'b0) ) XLXI_4 (.C(CLK1), 
               .CLR(CLR), 
               .D(XLXN_20), 
               .Q(D3_DUMMY));
   XOR2  XLXI_5 (.I0(D0_DUMMY), 
                .I1(XLXN_22), 
                .O(XLXN_6));
   XOR2  XLXI_6 (.I0(D1_DUMMY), 
                .I1(D0_DUMMY), 
                .O(XLXN_17));
   XOR2  XLXI_7 (.I0(D2_DUMMY), 
                .I1(XLXN_9), 
                .O(XLXN_18));
   XOR2  XLXI_8 (.I0(D3_DUMMY), 
                .I1(XLXN_15), 
                .O(XLXN_20));
   AND2  XLXI_9 (.I0(D0_DUMMY), 
                .I1(D1_DUMMY), 
                .O(XLXN_9));
   AND3  XLXI_10 (.I0(D0_DUMMY), 
                 .I1(D1_DUMMY), 
                 .I2(D2_DUMMY), 
                 .O(XLXN_15));
   VCC  XLXI_11 (.P(XLXN_22));
   AND2  XLXI_12 (.I0(EN), 
                 .I1(CLK), 
                 .O(CLK1));
endmodule
`timescale 1ns / 1ps

module mod10_MUSER_lab4(CLK, 
                        CLR, 
                        EN, 
                        D0, 
                        D1, 
                        D2, 
                        D3, 
                        RCO);

    input CLK;
    input CLR;
    input EN;
   output D0;
   output D1;
   output D2;
   output D3;
   output RCO;
   
   wire XLXN_1;
   wire XLXN_6;
   wire XLXN_9;
   wire D0_DUMMY;
   wire D1_DUMMY;
   wire D2_DUMMY;
   wire D3_DUMMY;
   wire RCO_DUMMY;
   
   assign D0 = D0_DUMMY;
   assign D1 = D1_DUMMY;
   assign D2 = D2_DUMMY;
   assign D3 = D3_DUMMY;
   assign RCO = RCO_DUMMY;
   counter163_MUSER_lab4  XLXI_1 (.CLK(CLK), 
                                 .CLR(XLXN_1), 
                                 .EN(EN), 
                                 .D0(D0_DUMMY), 
                                 .D1(D1_DUMMY), 
                                 .D2(D2_DUMMY), 
                                 .D3(D3_DUMMY));
   OR2  XLXI_2 (.I0(CLR), 
               .I1(RCO_DUMMY), 
               .O(XLXN_1));
   INV  XLXI_3 (.I(D0_DUMMY), 
               .O(XLXN_6));
   INV  XLXI_4 (.I(D2_DUMMY), 
               .O(XLXN_9));
   AND4  XLXI_5 (.I0(D3_DUMMY), 
                .I1(XLXN_9), 
                .I2(D1_DUMMY), 
                .I3(XLXN_6), 
                .O(RCO_DUMMY));
endmodule
`timescale 1ns / 1ps

module mod6_MUSER_lab4(CLK, 
                       CLR, 
                       EN, 
                       D0, 
                       D1, 
                       D2, 
                       D3, 
                       RCO);

    input CLK;
    input CLR;
    input EN;
   output D0;
   output D1;
   output D2;
   output D3;
   output RCO;
   
   wire XLXN_1;
   wire XLXN_5;
   wire XLXN_6;
   wire D0_DUMMY;
   wire D1_DUMMY;
   wire D2_DUMMY;
   wire D3_DUMMY;
   wire RCO_DUMMY;
   
   assign D0 = D0_DUMMY;
   assign D1 = D1_DUMMY;
   assign D2 = D2_DUMMY;
   assign D3 = D3_DUMMY;
   assign RCO = RCO_DUMMY;
   counter163_MUSER_lab4  XLXI_1 (.CLK(CLK), 
                                 .CLR(XLXN_1), 
                                 .EN(EN), 
                                 .D0(D0_DUMMY), 
                                 .D1(D1_DUMMY), 
                                 .D2(D2_DUMMY), 
                                 .D3(D3_DUMMY));
   OR2  XLXI_2 (.I0(CLR), 
               .I1(RCO_DUMMY), 
               .O(XLXN_1));
   INV  XLXI_3 (.I(D0_DUMMY), 
               .O(XLXN_5));
   INV  XLXI_4 (.I(D3_DUMMY), 
               .O(XLXN_6));
   AND4  XLXI_5 (.I0(XLXN_6), 
                .I1(D2_DUMMY), 
                .I2(D1_DUMMY), 
                .I3(XLXN_5), 
                .O(RCO_DUMMY));
endmodule
`timescale 1ns / 1ps

module lab3_MUSER_lab4(btn0, 
                       btn1, 
                       mclk, 
                       an, 
                       dp, 
                       seg);

    input btn0;
    input btn1;
    input mclk;
   output [3:0] an;
   output dp;
   output [6:0] seg;
   
   wire [3:0] seg0;
   wire [3:0] seg1;
   wire [3:0] seg2;
   wire [3:0] seg3;
   wire XLXN_18;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_27;
   wire XLXN_28;
   wire [3:0] XLXN_63;
   wire XLXN_67;
   wire [3:0] an_DUMMY;
   
   assign an[3:0] = an_DUMMY[3:0];
   pause  XLXI_2 (.btn0(btn0), 
                 .btn1(btn1), 
                 .mclk(mclk), 
                 .ST(XLXN_18));
   mod10_MUSER_lab4  XLXI_3 (.CLK(XLXN_27), 
                            .CLR(btn0), 
                            .EN(XLXN_18), 
                            .D0(seg0[0]), 
                            .D1(seg0[1]), 
                            .D2(seg0[2]), 
                            .D3(seg0[3]), 
                            .RCO(XLXN_21));
   mod10_MUSER_lab4  XLXI_4 (.CLK(XLXN_27), 
                            .CLR(btn0), 
                            .EN(XLXN_21), 
                            .D0(seg1[0]), 
                            .D1(seg1[1]), 
                            .D2(seg1[2]), 
                            .D3(seg1[3]), 
                            .RCO(XLXN_22));
   mod6_MUSER_lab4  XLXI_5 (.CLK(XLXN_27), 
                           .CLR(btn0), 
                           .EN(XLXN_23), 
                           .D0(seg2[0]), 
                           .D1(seg2[1]), 
                           .D2(seg2[2]), 
                           .D3(seg2[3]), 
                           .RCO(XLXN_24));
   mod10_MUSER_lab4  XLXI_6 (.CLK(XLXN_27), 
                            .CLR(btn0), 
                            .EN(XLXN_24), 
                            .D0(seg3[0]), 
                            .D1(seg3[1]), 
                            .D2(seg3[2]), 
                            .D3(seg3[3]), 
                            .RCO());
   AND2  XLXI_7 (.I0(XLXN_22), 
                .I1(XLXN_21), 
                .O(XLXN_23));
   myCLK  XLXI_8 (.mclk(mclk), 
                 .CLK(XLXN_28));
   BUFG  XLXI_9 (.I(XLXN_28), 
                .O(XLXN_27));
   an_gen  XLXI_10 (.btn0(XLXN_67), 
                   .mclk(mclk), 
                   .an(an_DUMMY[3:0]));
   MUX  XLXI_11 (.an(an_DUMMY[3:0]), 
                .seg0(seg0[3:0]), 
                .seg1(seg1[3:0]), 
                .seg2(seg2[3:0]), 
                .seg3(seg3[3:0]), 
                .dp(dp), 
                .seg(XLXN_63[3:0]));
   LED  XLXI_12 (.bcd(XLXN_63[3:0]), 
                .led(seg[6:0]));
   GND  XLXI_14 (.G(XLXN_67));
endmodule
`timescale 1ns / 1ps

module lab4(btn, 
            mclk, 
            sw, 
            an, 
            dp, 
            seg);

    input [3:0] btn;
    input mclk;
    input [7:0] sw;
   output [3:0] an;
   output dp;
   output [6:0] seg;
   
   wire XLXN_13;
   wire XLXN_14;
   wire [3:0] XLXN_15;
   wire [6:0] XLXN_16;
   wire [3:0] XLXN_17;
   wire [6:0] XLXN_18;
   wire XLXN_30;
   wire XLXN_32;
   wire XLXN_41;
   
   lab3_MUSER_lab4  XLXI_1 (.btn0(XLXN_32), 
                           .btn1(btn[1]), 
                           .mclk(mclk), 
                           .an(XLXN_17[3:0]), 
                           .dp(XLXN_13), 
                           .seg(XLXN_18[6:0]));
   state  XLXI_2 (.btn3(btn[3]), 
                 .ST(XLXN_30));
   mmux  XLXI_4 (.an0(XLXN_17[3:0]), 
                .an1(XLXN_15[3:0]), 
                .dp0(XLXN_13), 
                .dp1(XLXN_14), 
                .seg0(XLXN_18[6:0]), 
                .seg1(XLXN_16[6:0]), 
                .ST(XLXN_30), 
                .an(an[3:0]), 
                .dp(dp), 
                .seg(seg[6:0]));
   OR2  XLXI_5 (.I0(XLXN_30), 
               .I1(btn[0]), 
               .O(XLXN_32));
   INV  XLXI_7 (.I(XLXN_30), 
               .O(XLXN_41));
   cal_MUSER_lab4  XLXI_8 (.btn0(btn[0]), 
                          .btn1(btn[1]), 
                          .btn2(btn[2]), 
                          .mclk(mclk), 
                          .reset(XLXN_41), 
                          .sw(sw[7:0]), 
                          .an(XLXN_15[3:0]), 
                          .dp(XLXN_14), 
                          .seg(XLXN_16[6:0]));
endmodule
